.. highlight:: sh

.. _dm-lwm2m-demo:

=========================================
 LWM2M FOTA and Data Demonstration System
=========================================

.. todo:: add binary install instructions for all boards
.. todo:: add autogenerated flash layout for all boards

.. warning:: **Technology demonstration system only**.

             While the system described below works as documented, it
             may be **unstable**, and its behavior may change
             in the future.

Overview
========

This page documents how to set up and use an end-to-end IoT demonstration
system using OMA Lightweight M2M (LWM2M).  The system contains Zephyr-based
IoT devices, an IoT gateway, and a web application, Leshan, that is used as the
LWM2M server.  With Leshan you can issue commands, query data
and perform firmware over the air (FOTA) updates on the IoT device(s).

A block diagram of this system is shown here, and though it is not explicitely
shown, one or more IoT devices can connect to the network through the same
gateway.

.. figure:: /_static/dm-leshan/lwm2m-system-diagram.svg
   :alt: Device Management with LWM2M System Diagram
   :align: center
   :figwidth: 5in

Using this demonstration system, you can:

- See live data readings from your devices using the Leshan Web application.

- Send commands to the device, such as turning on and off the USR LED.

- Use Leshan to transfer the firmware image onto an IoT device and then
  initiate a firmware update.

Get the Hardware
================

.. _96Boards Nitrogen:
   http://www.96boards.org/product/nitrogen/

.. _96Boards HiKey:
   http://www.96boards.org/product/hikey/

.. _UART Serial Mezzanine:
   https://www.96boards.org/product/uartserial/

To set up this system, you will need a Linux or macOS workstation
computer, one or more IoT devices, and an IoT gateway.

We currently recommend:

- `96Boards Nitrogen`_ as an IoT device
- `96Boards HiKey`_ as an IoT gateway, with `UART Serial
  Mezzanine`_ for console access

Source for other boards is provided on a best-effort basis.

Prepare the System
==================

.. _Docker:
   https://www.docker.com/

.. _Ansible:
   https://www.ansible.com

.. _install Ansible:
   http://docs.ansible.com/ansible/latest/intro_installation.html

.. _GitHub guide to SSH keys:
   https://help.github.com/articles/connecting-to-github-with-ssh/

1. Set up Leshan
-----------------

**Required Equipment**: workstation which supports `Docker`_.

Start the Linaro Technologies container with the following command::

    docker run --restart=always -d -t -p 5683:5683/udp -p 5684:5684/udp \
      --read-only --tmpfs=/tmp -p 8081:8080 \
      --name leshan linarotechnologies/leshan:latest

After running the Leshan container, visit http://localhost:8081/ to
load the Leshan web interface.

You can also browse the Security tab:

.. figure:: /_static/dm-leshan/leshan-security.png
   :align: center
   :width: 4in
   :alt: Leshan Administrator Interface

Your Leshan container is now ready for use.

2. Setup the IoT gateway
------------------------

**Required Equipment**: IoT gateway device (i.e. `96Boards HiKey`_  and
    workstation to flash the board.

Follow the Linux microPlatform :ref:`linux-getting-started` guide to
set up a `96Boards HiKey`_ gateway for container-based application
deployment.

If you don't have a HiKey, the Linux microPlatform Getting Started Guide
contains information for other boards, provided on a best-effort basis.

a. configure networking for your IoT gateway device
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

- Now connect your IoT gateway to the network.

  You can connect a HiKey to a local WiFi network\ [#hikeyethernet]_
  from its serial console as follows::

    sudo nmcli device wifi connect <NetworkSSID> password <NetworkPassword>

  The default password to use with ``sudo`` is ``linaro``, but we
  recommend that you change it while setting up your gateway, before
  connecting it to the network.

  After connecting to the network, record the IP address of your
  gateway, GATEWAY_IP_ADDRESS, which you can obtain when using WiFi
  with::

    ip addr show wlan0 | grep -o 'inet [.0-9]*'

  (If you're using Ethernet, ``ip addr show`` will show all IP
  addresses on the system.)

- You can now copy your SSH key to the gateway in order to control it
  with Ansible. Do this with ``ssh-copy-id``::

    ssh-copy-id linaro@GATEWAY_IP_ADDRESS

  Use the same gateway password from the previous step.

b. Manually run the gateway containers
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Follow :ref:`big-getting-started` to setup a Basic IoT Gateway.

c. Use ansible to manage the gateway containers
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

**Required Equipment**: IoT gateway and workstation to run Ansible.

You'll now use Ansible to set up your IoT gateway to act as a network
proxy for your IoT device to publish sensor data to CloudMQTT, and
fetch updates from hawkBit.

- First, `install Ansible`_, which will let you install and control
  containers on your IoT gateway via SSH from your workstation.

- If you don't already have one, you now need to create an SSH key on
  your workstation. If you've never done this before, the `GitHub
  guide to SSH keys`_ has useful instructions.


- Clone the ``gateway-ansible`` repository, which contains an Ansible
  playbook to set up the gateway for this system::

    git clone https://github.com/linaro-technologies/gateway-ansible

- From the ``gateway-ansible`` repository, deploy the gateway
  containers using the CloudMQTT information you recorded earlier::

    ansible-playbook -e "mqttuser=CLOUDMQTT_USER mqttpass=CLOUDMQTT_PASSWORD \
                         mqtthost=CLOUDMQTT_SERVER mqttport=CLOUDMQTT_PORT \
                         gitci=WORKSTATION_IP_ADDRESS tag=latest-arm64" \
                     -i GATEWAY_IP_ADDRESS, -u linaro iot-gateway.yml
                     --tags gateway

  WORKSTATION_IP_ADDRESS in the above command line is the IP address
  of the system which is running the hawkBit server you set up
  earlier.

3. Configure IoT Devices
------------------------

**Required Equipment**: workstation to install the Zephyr microPlatform
development environment, and IoT device to test installation.

Install an Zephyr microPlatform development environment by following
:ref:`zephyr-getting-started`.

If you're using `96Boards Nitrogen`_, build and flash the
demonstration application::

  ./genesis build -b 96b_nitrogen zephyr-fota-samples/dm-lwm2m
  ./genesis flash -b 96b_nitrogen zephyr-fota-samples/dm-lwm2m

.. include:: pyocd.include

If you don't have a Nitrogen, information for other boards is provided
on a best-effort basis in :ref:`dm-lwm2m-devices`.

Use the System
==============

Now that your system is fully set up, it's time to check that sensor
data are being sent to the cloud, and do a FOTA update.

.. note::
    The Leshan user web interface is a simple, web application and it does not
    provide a complete end-to-end device management system. Leshan's simplicity
    makes it a perfect demonstration and prototyping system for LWM2M devices.

Retrieve Data
-------------

When a device registers with the Leshan server, Leshan will automatically
render known object types on the web interface.  You can interact with the
objects by scrolling and clicking the buttons for the objects.

- Read device information

    To read the device information, simple scroll down to the
    corresponding device information object and select the 'READ' button.  If
    Leshan is able to communicate with your device you will see all of the
    available device information.

    .. figure:: /_static/dm-leshan/leshan-readinfo.png
       :align: center
       :width: 4in
       :alt: Read the device information in Leshan

- Read current state of temperature and light objects

    To read the current status of the Temperature and Light objects, scroll down
    to the light and temperature objects and select the READ button. You will
    see the state of these objects on the device similar to this figure.

    .. figure:: /_static/dm-leshan/leshan-readtemp-light.png
      :align: center
      :width: 4in
      :alt: Read the light settings in Leshan

- Change state of the light object

    To change the state of an object, simply use the leshan interface and select
    the 'write' button to bring up the appropriate interface for changing data.

    .. figure:: /_static/dm-leshan/leshan-changelight.png
        :align: center
        :width: 4in
        :alt: Write the light settings in Leshan

FOTA Updates
------------

Updating the firmware is provided by the LWM2M firmware update object.

- Initiate the firmware transfer

    To start the firmware update, we will first 'write' the location of the
    file in the "Package URI" field.  Once you send this message, the file
    will begin transferring to the target.

    .. note::

        * the length of the Package URI field must be < 255 characters

        * The URI must be hosted where it is routable from your device.
            The URI can be either coap:// or http://

    .. figure:: /_static/dm-leshan/leshan-packageuri.png
        :width: 4in
        :align: center

- Monitor the target for a completed transfer

    .. figure:: /_static/dm-leshan/leshan-observeupdate1.png
        :width: 4in
        :align: center

- Execute the update and monitor the firmware update state

    .. note::

        * State == 0 ; Idle

        * State == 1 ; Downloading

        * State == 2 ; Downloaded

        * State == 3 ; Updating

    .. figure:: /_static/dm-leshan/leshan-observeupdate1.png
        :width: 4in
        :align: center

- After the device downloads the update file (State == 2) you initiate the
    update by clicking on the 'exec' button.

    When the update execution is complete, the device will restart

- Congratulations! You've just done your first FOTA update using this
    system.

Known Issues
============

Issues and observations are logged within Linaro's `Bugzilla issue
tracker
<https://bugs.linaro.org/buglist.cgi?component=IoT%20end-to-end&list_id=12808&product=Linaro%20Technologies>`_.

.. rubric:: Footnotes

.. [#hikeyethernet]

   You can also use a USB Ethernet dongle.
