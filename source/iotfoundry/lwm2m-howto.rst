.. highlight:: sh

.. _dm-lwm2m-demo:

=========================================
 LWM2M FOTA and Data Demonstration System
=========================================

.. todo:: add binary install instructions for all boards
.. todo:: add autogenerated flash layout for all boards

.. warning:: **Technology demonstration system only**.

             While the system described below works as documented, it
             may be **unstable**, and its behavior may change
             in the future.

Overview
========

This page documents how to set up and use an end-to-end IoT demonstration
system using OMA Lightweight M2M (LWM2M).  The system contains Zephyr-based
IoT devices, an IoT gateway, and a web application, Leshan, that is used as the
LWM2M server.  With Leshan you can issue commands, query data
and perform firmware over the air (FOTA) updates on the IoT device(s).

A block diagram of this system is shown here, and though it is not explicitly
shown, one or more IoT devices can connect to the network through the same
gateway.

.. figure:: /_static/dm-leshan/lwm2m-system-diagram.svg
   :alt: Device Management with LWM2M System Diagram
   :align: center
   :figwidth: 5in

Using this demonstration system, you can:

- See live data readings from your devices using the Leshan Web application.

- Send commands to the device, such as turning on and off the USR LED.

- Use Leshan to transfer the firmware image onto an IoT device and then
  initiate a firmware update.

Get the Hardware
================

To set up this system, you will need a Linux or macOS workstation
computer, one or more IoT devices, and an IoT gateway.

We currently recommend:

- `96Boards Nitrogen`_ as an IoT device
- `96Boards HiKey`_ as an IoT gateway, with `UART Serial
  Mezzanine`_ for console access

Source for other boards is provided on a best-effort basis.

Prepare the System
==================

This is broken down into the following steps.

- :ref:`dm-lwm2m-leshan`
- :ref:`dm-lwm2m-linux`
- :ref:`dm-lwm2m-gateway`
- :ref:`dm-lwm2m-zephyr`
- :ref:`dm-lwm2m-device`

.. _dm-lwm2m-leshan:

1. Set up Leshan
----------------

**Required Equipment**: workstation which supports `Docker`_.

Run a demonstration-grade Leshan server on your workstation (not the
gateway)::

    docker run --restart=always -d -t -p 5683:5683/udp -p 5684:5684/udp \
      --read-only --tmpfs=/tmp -p 8081:8080 \
      --name leshan opensourcefoundries/leshan:latest

After running the Leshan container, visit http://localhost:8081/ to
load its web interface.

You can also browse the Security tab:

.. figure:: /_static/dm-leshan/leshan-security.png
   :align: center
   :width: 4in
   :alt: Leshan Administrator Interface

Your Leshan container is now ready for use.

.. _dm-lwm2m-linux:

2. Install the Linux microPlatform
----------------------------------

**Required Equipment**: IoT gateway and workstation to flash the board.

Follow the Linux microPlatform :ref:`linux-getting-started` guide to set up
a `96Boards HiKey`_ gateway for container-based application
deployment.

If you don't have a HiKey, the Getting Started Guide contains
information for other boards, provided on a best-effort basis.

.. _dm-lwm2m-gateway:

3. Set up the IoT Gateway
-------------------------

**Required Equipment**: IoT gateway device and workstation to run `Ansible`_.

You'll now use Ansible to set up your IoT gateway to act as a network
proxy for your IoT device to communicate with the Leshan server you
set up earlier.

.. include:: iot-gateway-setup-common.include

- From the ``gateway-ansible`` repository, deploy the gateway
  containers to your IoT gateway::

    GW_HOSTNAME=XXX ./iot-gateway.sh

  The script assumes its executing from the system where the Leshan server
  resides. If this isn't the case, the GITCI=<Leshan IP> variable must be set.

.. _dm-lwm2m-zephyr:

4. Install the Zephyr microPlatform
-----------------------------------

**Required Equipment**: workstation to install the Zephyr microPlatform
development environment, and IoT device to test installation.

Follow the installation steps in the Zephyr microPlatform
:ref:`zephyr-getting-started` guide.

.. _dm-lwm2m-device:

5. Set up the IoT Device(s)
---------------------------

**Required Equipment**: IoT device and workstation to flash the
device.

If you're using `96Boards Nitrogen`_, build and flash the
demonstration application::

  ./zmp build -b 96b_nitrogen zephyr-fota-samples/dm-lwm2m
  ./zmp flash -b 96b_nitrogen zephyr-fota-samples/dm-lwm2m

.. include:: pyocd.include

If you don't have a Nitrogen, information for other boards is provided
on a best-effort basis in :ref:`dm-lwm2m-devices`.

Use the System
==============

Now that your system is fully set up, it's time to check that sensor
data are being sent to the cloud, and do a FOTA update.

.. note::

   The Leshan user web interface is a simple web application, which does not
   provide a complete end-to-end device management system. Leshan's simplicity
   makes it a perfect demonstration and prototyping system for LWM2M devices.

Retrieve Data
-------------

When a device registers with the Leshan server, Leshan will automatically
render known object types on the web interface.  You can interact with the
objects by scrolling and clicking the buttons for the objects.

- Read device information

  To read the device information, simple scroll down to the
  corresponding device information object and select the 'READ' button.  If
  Leshan is able to communicate with your device you will see all of the
  available device information.

  .. figure:: /_static/dm-leshan/leshan-readinfo.png
     :align: center
     :width: 4in
     :alt: Read the device information in Leshan

- Read current state of temperature and light objects

  To read the current status of the Temperature and Light objects, scroll down
  to the light and temperature objects and select the READ button. You will
  see the state of these objects on the device similar to this figure.

  .. figure:: /_static/dm-leshan/leshan-readtemp-light.png
    :align: center
    :width: 4in
    :alt: Read the light settings in Leshan

- Change state of the light object

  To change the state of an object, simply use the leshan interface and select
  the 'write' button to bring up the appropriate interface for changing data.

  .. figure:: /_static/dm-leshan/leshan-changelight.png
      :align: center
      :width: 4in
      :alt: Write the light settings in Leshan

FOTA Updates
------------

Updating the firmware is provided by the LWM2M firmware update object.

- Initiate the firmware transfer

  To start the firmware update, we will first 'write' the location of the
  file in the "Package URI" field.  Once you send this message, the file
  will begin transferring to the target.

  .. note::

      * the length of the Package URI field must be < 255 characters

      * The URI must be hosted where it is routable from your device.
        The URI can be either coap:// or http://

  .. figure:: /_static/dm-leshan/leshan-packageuri.png
      :width: 4in
      :align: center

- Monitor the target for a completed transfer

  .. figure:: /_static/dm-leshan/leshan-observeupdate1.png
      :width: 4in
      :align: center

- Execute the update and monitor the firmware update state

  The state values and their meanings are:

      * State == 0: Idle
      * State == 1: Downloading
      * State == 2: Downloaded
      * State == 3: Updating

  .. figure:: /_static/dm-leshan/leshan-observeupdate1.png
      :width: 4in
      :align: center

- After the device downloads the update file (State == 2), initiate the
  update by clicking on the 'exec' button.

  When the update execution is complete, the device will restart.

- Congratulations! You've just done your first FOTA update using this
  system.

Reporting Issues
================

.. todo:: provide public and subscriber trackers once chosen

.. _96Boards Nitrogen:
   https://www.96boards.org/product/nitrogen/

.. _96Boards HiKey:
   https://www.96boards.org/product/hikey/

.. _UART Serial Mezzanine:
   https://www.96boards.org/product/uartserial/

.. _Docker:
   https://www.docker.com/

.. _Ansible:
   https://www.ansible.com

.. _GitHub guide to SSH keys:
   https://help.github.com/articles/connecting-to-github-with-ssh/
